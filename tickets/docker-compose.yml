services:

  event_ticket_platform_dev:
    env_file: 
      - ${ENV_FILE}
    build: 
      context: . 
      dockerfile: ${DOCKER_FILE}
    volumes:
      - .:/app  # Mapea el código fuente dentro del contenedor
      - ./target:/target  # Mapea la carpeta de compilación
      - ~/.m2:/root/.m2 # Cache de Maven para evitar descargas
    working_dir: /app
    ports:
      - "8083:8083"         # Mantén mismo puerto interno/externo
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DEVTOOLS_RESTART_ENABLED: "true"
      SPRING_DEVTOOLS_LIVERELOAD_ENABLED: "true"
      DATABASE_URL: jdbc:postgresql://db:5432/event_ticket_platform
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: nosemueve
    restart: on-failure 
    depends_on:
      db:
        condition: service_healthy

  # Our postgres database
  db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: nosemueve
      POSTGRES_DB: event_ticket_platform 
    restart: always
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Database management interface
  # adminer:
  #   image: adminer:latest
  #   restart: always
  #   ports:
  #     - "8888:8080"
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    depends_on:
      - db

  keycloak:
    image: quay.io/keycloak/keycloak:latest
    ports:
      - "9090:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin 
    volumes:
      - keycloak-data:/opt/keycloak/data
    command: 
      - start-dev
      - --db=dev-file
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/ || exit 1"]
      interval: 20s
      timeout: 10s
      retries: 10
volumes:
  keycloak-data:
    driver: local