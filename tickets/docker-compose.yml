# services:
#   # Backend Spring Boot
#   backend:
#     env_file:
#       - ${ENV_FILE}
#     build:
#       context: .
#       dockerfile: ${DOCKER_FILE}
#     volumes:
#       - .:/app
#       - ./target:/target
#       - ~/.m2:/root/.m2
#     working_dir: /app
#     ports:
#       - "8083:8083"
#     environment:
#       KEYCLOAK_ISSUER_URI: https://auth.localtest.me/realms/event-ticket-platform
#       SPRING_PROFILES_ACTIVE: dev
#       SPRING_DEVTOOLS_RESTART_ENABLED: "true"
#       SPRING_DEVTOOLS_LIVERELOAD_ENABLED: "true"
#       DATABASE_URL: jdbc:postgresql://db:5432/event_ticket_platform
#       DATABASE_USERNAME: postgres
#       DATABASE_PASSWORD: nosemueve
#     extra_hosts:
#       - "auth.localtest.me:host-gateway"
#     restart: on-failure
#     depends_on:
#       db:
#         condition: service_healthy

#   # Postgres Database
#   db:
#     image: postgres:latest
#     environment:
#       POSTGRES_PASSWORD: nosemueve
#       POSTGRES_DB: event_ticket_platform
#       POSTGRES_MULTIPLE_DATABASES: event_ticket_platform,keycloak_db
#     restart: always
#     ports:
#       - "5432:5432"
#     volumes:
#       - postgres-data:/var/lib/postgresql/data
#       - ./init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh
#     healthcheck:
#       test: ["CMD-SHELL", "pg_isready -U postgres"]
#       interval: 10s
#       timeout: 5s
#       retries: 5

#   # PgAdmin optional
#   pgadmin:
#     image: dpage/pgadmin4:latest
#     restart: always
#     environment:
#       PGADMIN_DEFAULT_EMAIL: admin@admin.com
#       PGADMIN_DEFAULT_PASSWORD: admin
#     ports:
#       - "8080:80"
#     depends_on:
#       - db

#   # Keycloak
#   keycloak:
#     image: quay.io/keycloak/keycloak:latest
#     ports:
#       - "8180:8080"
#     container_name: keycloak
#     environment:
#       KC_BOOTSTRAP_ADMIN_USERNAME: admin
#       KC_BOOTSTRAP_ADMIN_PASSWORD: admin
#       KC_DB: postgres
#       KC_DB_URL: jdbc:postgresql://db:5432/keycloak_db
#       KC_DB_USERNAME: postgres
#       KC_DB_PASSWORD: nosemueve
#     volumes:
#       - keycloak-data:/opt/keycloak/data
#     command:
#       - "start-dev"
#       - "--hostname=auth.localtest.me"
#       - "--hostname-strict=false"
#       - "--http-enabled=true"
#       - "--proxy-headers=xforwarded"
#     depends_on:
#       - db
#     healthcheck:
#       test: ["CMD-SHELL", "curl -f http://localhost:8080/ || exit 1"]
#       interval: 20s
#       timeout: 10s
#       retries: 10

#   # Reverse proxy Nginx with SSL
#   nginx:
#     image: nginx:alpine
#     volumes:
#       - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
#       - ./nginx/certs:/etc/nginx/certs:ro
#     ports:
#       - "443:443"
#     depends_on:
#       - backend
#       - keycloak

# volumes:
#   postgres-data:
#   keycloak-data:

services:
  # Backend Spring Boot
  backend:
    env_file:
      - ${ENV_FILE}
    container_name: backend
    build:
      context: .
      dockerfile: ${DOCKER_FILE}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.localtest.me`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls=true"
      - "traefik.http.services.backend.loadbalancer.server.port=8083"
    volumes:
      - .:/app
      - ./target:/target
      - ~/.m2:/root/.m2
    working_dir: /app
    ports:
      - "8083:8083"
    environment:
      KEYCLOAK_ISSUER_URI: https://auth.localtest.me/realms/event-ticket-platform
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DEVTOOLS_RESTART_ENABLED: "true"
      SPRING_DEVTOOLS_LIVERELOAD_ENABLED: "true"
      DATABASE_URL: jdbc:postgresql://db:5432/event_ticket_platform
      DATABASE_USERNAME: postgres
      DATABASE_PASSWORD: nosemueve
    extra_hosts:
      - "auth.localtest.me:host-gateway"
    restart: on-failure
    networks:
      - traefik
    depends_on:
      db:
        condition: service_healthy

  # Postgres Database
  db:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: nosemueve
      POSTGRES_DB: event_ticket_platform
      POSTGRES_MULTIPLE_DATABASES: event_ticket_platform,keycloak_db
    restart: always
    container_name: postgres_database
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./init-multiple-dbs.sh:/docker-entrypoint-initdb.d/init-multiple-dbs.sh
    networks:
      - traefik
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # PgAdmin optional
  pgadmin:
    image: dpage/pgadmin4:latest
    restart: always
    container_name: pgAdmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "8080:80"
    networks:
      - traefik
    depends_on:
      - db

  # Keycloak
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    ports:
      - "8180:8080"
    container_name: keycloak
    environment:
      KC_BOOTSTRAP_ADMIN_USERNAME: admin
      KC_BOOTSTRAP_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://db:5432/keycloak_db
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: nosemueve
      KC_HOSTNAME: auth.localtest.me
      KC_HOSTNAME_STRICT: "false"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.keycloak.entrypoints=websecure"
      - "traefik.http.routers.keycloak.rule=Host(`auth.localtest.me`)"
      - "traefik.http.routers.keycloak.tls=true"
      - "traefik.http.services.keycloak.loadbalancer.server.port=8080"
    networks:
      - traefik
    volumes:
      - keycloak-data:/opt/keycloak/data
    command:
      - "start-dev"
      - "--hostname=auth.localtest.me"
      - "--http-enabled=true"
      - "--proxy-headers=xforwarded"
    depends_on:
      - db
  # Traefik Reverse Proxy
  traefik:
    image: traefik:v3.0
    container_name: traefik
    command:
      - "--api.insecure=true" # Dashboard accesible on dev
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--serversTransport.insecureSkipVerify=true" # allow self-signed on dev
      - "--providers.file.filename=/etc/traefik/traefik-dynamic.yml"
      - "--log.level=DEBUG"
      - "--log.format=json"
      - "--providers.docker.watch=true"
      - "traefik.docker.network=traefik"
    networks:
      - traefik
    ports:
      - "80:80"
      - "443:443"
      - "8088:8080" # Dashboard en http://localhost:8088
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./certs:/certs:ro" # mount local certs en modo solo lectura
      - "./traefik-dynamic.yml:/etc/traefik/traefik-dynamic.yml:ro"
networks:
  traefik:
    external: false

volumes:
  postgres-data:
  keycloak-data:
